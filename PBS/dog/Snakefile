import numpy as np
import pandas as pd
#snakemake -s intersect_genes_outliers.py --config input_file=vr_vvEU_vvNA_qc_ind66cov1pval5_50kb10kb
rule all:
    input:
        expand(
            'output/{pbs}/{percentile}/outlier_genes.txt',
            pbs=["PBS0_w", "PBS1_w", "PBS2_w"],
            percentile=[99.95, 99.5],
        )

rule add_genes:
    input:
        config["input_file"],
        '/space/s2/joana/refgenomes/Functional_annotation/bedmap/genesDog.sorted.bed',
    output:
        "output/windows.bed",
    shell:
        'bedtools sort -i {input[0]} | bedtools map -a stdin -b {input[1]} -c 4 -o distinct > {output}'

rule get_outliers:
    input:
        "output/windows.bed",
    output:
        'output/{pbs}/{percentile}/outliers.bed',
    run:
        pbs = wildcards["pbs"]
        percentile = float(wildcards["percentile"])
        df = pd.read_csv(input[0], '\t', header=None, names=["chr", "pos_start", "pos_end", "fst01_w", "fst02_w", "fst12_w", "fst01_uw", "fst02_uw", "fst12_uw","PBS0_w", "PBS1_w", "PBS2_w", "PBS0_uw", "PBS1_uw", "PBS2_uw","nsites", "genes"])
        print(df)
        threshold = df[pbs].quantile(percentile / 100.0)
        df = df[df[pbs] >= threshold]
        df = df.sort_values(by=pbs, ascending=False)
        df.to_csv(output[0], '\t', index=False)


rule extract_genes:
    input:
        'output/{pbs}/{percentile}/outliers.bed',
    output:
        'output/{pbs}/{percentile}/outlier_genes.txt',
    run:
        df = pd.read_csv(input[0], '\t')
        print(df)
        df = df[df.genes != "."]
        df["genes"] =  df.genes.str.split(",")
        genes = pd.unique(np.concatenate(df.genes.values))
        pd.DataFrame(genes).to_csv(output[0], index=False, header=False)




